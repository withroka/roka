export const mock = {};

mock[`gqlClient().query() makes GraphQL query > fetch 1`] =
[
  {
    input: [
      "https://api.github.com/graphql",
      {
        body: '{"query":"query ($owner: String!, $name: String!) {\\n  repository(owner: $owner, name: $name) {\\n    owner {\\n      login\\n      __typename\\n    }\\n    name\\n    description\\n    __typename\\n  }\\n}","variables":{"name":"test","owner":"withroka"}}',
        headers: {
          "content-type": "application/json",
          accept: "application/graphql-response+json, application/graphql+json, application/json, text/event-stream, multipart/mixed",
        },
        method: "POST",
        redirect: "follow",
      },
    ],
    output: [
      '{"data":{"repository":{"owner":{"login":"withroka","__typename":"Organization"},"name":"test","description":"Dummy repository for E2E testing","__typename":"Repository"}}}',
      {
        headers: {
          "access-control-allow-origin": "*",
          "access-control-expose-headers": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset",
          "content-security-policy": "default-src 'none'",
          "content-type": "application/json; charset=utf-8",
          "referrer-policy": "origin-when-cross-origin, strict-origin-when-cross-origin",
          "strict-transport-security": "max-age=31536000; includeSubdomains; preload",
          "x-accepted-oauth-scopes": "repo",
          "x-content-type-options": "nosniff",
          "x-frame-options": "deny",
          "x-github-media-type": "unknown, github.v4",
          "x-github-request-id": "E085:2D1105:1D60428:1E7C675:67C9691F",
          "x-oauth-client-id": "178c6fc778ccc68e1d6a",
          "x-oauth-scopes": "gist, read:org, repo, workflow",
          "x-ratelimit-limit": "5000",
          "x-ratelimit-remaining": "4751",
          "x-ratelimit-reset": "1741253863",
          "x-ratelimit-resource": "graphql",
          "x-ratelimit-used": "249",
          "x-xss-protection": "0",
          date: "Thu, 06 Mar 2025 09:21:36 GMT",
          server: "github.com",
          vary: "Accept-Encoding, Accept, X-Requested-With",
        },
        status: 200,
        statusText: "OK",
      },
    ],
  },
];

mock[`gqlClient().queryPaginated() makes paginated GraphQL query > fetch 1`] =
[
  {
    input: [
      "https://api.github.com/graphql",
      {
        body: '{"query":"query ($owner: String!, $name: String!) {\\n  repository(owner: $owner, name: $name) {\\n    issues(first: 100) {\\n      nodes {\\n        number\\n        title\\n        state\\n        __typename\\n      }\\n      pageInfo {\\n        endCursor\\n        startCursor\\n        hasNextPage\\n        hasPreviousPage\\n        __typename\\n      }\\n      __typename\\n    }\\n    __typename\\n  }\\n}","variables":{"cursor":null,"name":"test","owner":"withroka"}}',
        headers: {
          "content-type": "application/json",
          accept: "application/graphql-response+json, application/graphql+json, application/json, text/event-stream, multipart/mixed",
        },
        method: "POST",
        redirect: "follow",
      },
    ],
    output: [
      '{"data":{"repository":{"issues":{"nodes":[{"number":7,"title":"Test issue","state":"CLOSED","__typename":"Issue"},{"number":8,"title":"Test issue","state":"CLOSED","__typename":"Issue"},{"number":9,"title":"Test issue","state":"CLOSED","__typename":"Issue"},{"number":10,"title":"Test","state":"CLOSED","__typename":"Issue"},{"number":11,"title":"Test","state":"CLOSED","__typename":"Issue"},{"number":12,"title":"Test","state":"CLOSED","__typename":"Issue"},{"number":13,"title":"Test","state":"CLOSED","__typename":"Issue"},{"number":14,"title":"Test","state":"CLOSED","__typename":"Issue"},{"number":15,"title":"Test","state":"CLOSED","__typename":"Issue"},{"number":16,"title":"Test","state":"CLOSED","__typename":"Issue"},{"number":17,"title":"Test","state":"CLOSED","__typename":"Issue"},{"number":18,"title":"Test","state":"CLOSED","__typename":"Issue"},{"number":19,"title":"Test","state":"CLOSED","__typename":"Issue"},{"number":20,"title":"Test","state":"CLOSED","__typename":"Issue"},{"number":21,"title":"Test","state":"CLOSED","__typename":"Issue"},{"number":22,"title":"Test","state":"CLOSED","__typename":"Issue"},{"number":23,"title":"Test","state":"CLOSED","__typename":"Issue"},{"number":24,"title":"Test issue","state":"CLOSED","__typename":"Issue"},{"number":45,"title":"Test issue","state":"CLOSED","__typename":"Issue"},{"number":47,"title":"Test issue","state":"CLOSED","__typename":"Issue"},{"number":48,"title":"Test issue","state":"CLOSED","__typename":"Issue"},{"number":49,"title":"Test issue","state":"CLOSED","__typename":"Issue"},{"number":52,"title":"Test issue","state":"CLOSED","__typename":"Issue"},{"number":54,"title":"Test issue","state":"CLOSED","__typename":"Issue"},{"number":55,"title":"Test issue","state":"CLOSED","__typename":"Issue"},{"number":56,"title":"Test issue","state":"OPEN","__typename":"Issue"},{"number":57,"title":"Test issue","state":"CLOSED","__typename":"Issue"}],"pageInfo":{"endCursor":"Y3Vyc29yOnYyOpK5MjAyNS0wMy0wNlQxMDoxNjo1MyswMTowMM6s19EZ","startCursor":"Y3Vyc29yOnYyOpK5MjAyNS0wMi0xOFQyMzoxMzo1OCswMTowMM6qkspf","hasNextPage":false,"hasPreviousPage":false,"__typename":"PageInfo"},"__typename":"IssueConnection"},"__typename":"Repository"}}}',
      {
        headers: {
          "access-control-allow-origin": "*",
          "access-control-expose-headers": "ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Used, X-RateLimit-Resource, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type, X-GitHub-SSO, X-GitHub-Request-Id, Deprecation, Sunset",
          "content-security-policy": "default-src 'none'",
          "content-type": "application/json; charset=utf-8",
          "referrer-policy": "origin-when-cross-origin, strict-origin-when-cross-origin",
          "strict-transport-security": "max-age=31536000; includeSubdomains; preload",
          "x-accepted-oauth-scopes": "repo",
          "x-content-type-options": "nosniff",
          "x-frame-options": "deny",
          "x-github-media-type": "unknown, github.v4",
          "x-github-request-id": "E086:46439:1DB33EA:1ECF623:67C96920",
          "x-oauth-client-id": "178c6fc778ccc68e1d6a",
          "x-oauth-scopes": "gist, read:org, repo, workflow",
          "x-ratelimit-limit": "5000",
          "x-ratelimit-remaining": "4750",
          "x-ratelimit-reset": "1741253863",
          "x-ratelimit-resource": "graphql",
          "x-ratelimit-used": "250",
          "x-xss-protection": "0",
          date: "Thu, 06 Mar 2025 09:21:36 GMT",
          server: "github.com",
          vary: "Accept-Encoding, Accept, X-Requested-With",
        },
        status: 200,
        statusText: "OK",
      },
    ],
  },
];
