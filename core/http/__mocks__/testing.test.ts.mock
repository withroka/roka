export const mock = {};

mock[`mockFetch() stubs fetch > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        headers: {},
        method: "GET",
        redirect: "follow",
      },
    ],
    output: [
      '<!doctype html><html lang="en"><head><title>Example Domain</title><meta name="viewport" content="width=device-width, initial-scale=1"><style>body{background:#eee;width:60vw;margin:15vh auto;font-family:system-ui,sans-serif}h1{font-size:1.5em}div{opacity:0.8}a:link,a:visited{color:#348}</style><body><div><h1>Example Domain</h1><p>This domain is for use in documentation examples without needing permission. Avoid use in operations.<p><a href="https://iana.org/domains/example">Learn more</a></div></body></html>\n',
      {
        headers: {
          "accept-ranges": "bytes",
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-type": "text/html",
          "last-modified": "Thu, 09 Oct 2025 16:42:02 GMT",
          date: "Tue, 21 Oct 2025 19:51:21 GMT",
          etag: '"bc2473a18e003bdb249eba5ce893033f:1760028122.592274"',
          vary: "Accept-Encoding",
        },
        status: 200,
        statusText: "OK",
      },
    ],
  },
];

mock[`mockFetch() replays multiple calls > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        headers: {},
        method: "GET",
        redirect: "follow",
      },
    ],
    output: [
      '<!doctype html><html lang="en"><head><title>Example Domain</title><meta name="viewport" content="width=device-width, initial-scale=1"><style>body{background:#eee;width:60vw;margin:15vh auto;font-family:system-ui,sans-serif}h1{font-size:1.5em}div{opacity:0.8}a:link,a:visited{color:#348}</style><body><div><h1>Example Domain</h1><p>This domain is for use in documentation examples without needing permission. Avoid use in operations.<p><a href="https://iana.org/domains/example">Learn more</a></div></body></html>\n',
      {
        headers: {
          "accept-ranges": "bytes",
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-type": "text/html",
          "last-modified": "Thu, 09 Oct 2025 16:42:02 GMT",
          date: "Tue, 21 Oct 2025 19:51:22 GMT",
          etag: '"bc2473a18e003bdb249eba5ce893033f:1760028122.592274"',
          vary: "Accept-Encoding",
        },
        status: 200,
        statusText: "OK",
      },
    ],
  },
  {
    input: [
      "https://example.com/",
      {
        headers: {},
        method: "GET",
        redirect: "follow",
      },
    ],
    output: [
      '<!doctype html><html lang="en"><head><title>Example Domain</title><meta name="viewport" content="width=device-width, initial-scale=1"><style>body{background:#eee;width:60vw;margin:15vh auto;font-family:system-ui,sans-serif}h1{font-size:1.5em}div{opacity:0.8}a:link,a:visited{color:#348}</style><body><div><h1>Example Domain</h1><p>This domain is for use in documentation examples without needing permission. Avoid use in operations.<p><a href="https://iana.org/domains/example">Learn more</a></div></body></html>\n',
      {
        headers: {
          "accept-ranges": "bytes",
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-type": "text/html",
          "last-modified": "Thu, 09 Oct 2025 16:42:02 GMT",
          date: "Tue, 21 Oct 2025 19:51:22 GMT",
          etag: '"bc2473a18e003bdb249eba5ce893033f:1760028122.592274"',
          vary: "Accept-Encoding",
        },
        status: 200,
        statusText: "OK",
      },
    ],
  },
];

mock[`mockFetch() matches with URL > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        headers: {},
        method: "GET",
        redirect: "follow",
      },
    ],
    output: [
      '<!doctype html><html lang="en"><head><title>Example Domain</title><meta name="viewport" content="width=device-width, initial-scale=1"><style>body{background:#eee;width:60vw;margin:15vh auto;font-family:system-ui,sans-serif}h1{font-size:1.5em}div{opacity:0.8}a:link,a:visited{color:#348}</style><body><div><h1>Example Domain</h1><p>This domain is for use in documentation examples without needing permission. Avoid use in operations.<p><a href="https://iana.org/domains/example">Learn more</a></div></body></html>\n',
      {
        headers: {
          "accept-ranges": "bytes",
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-type": "text/html",
          "last-modified": "Thu, 09 Oct 2025 16:42:02 GMT",
          date: "Tue, 21 Oct 2025 19:51:23 GMT",
          etag: '"bc2473a18e003bdb249eba5ce893033f:1760028122.592274"',
          vary: "Accept-Encoding",
        },
        status: 200,
        statusText: "OK",
      },
    ],
  },
];

mock[`mockFetch() matches with Request > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        headers: {},
        method: "GET",
        redirect: "follow",
      },
    ],
    output: [
      '<!doctype html><html lang="en"><head><title>Example Domain</title><meta name="viewport" content="width=device-width, initial-scale=1"><style>body{background:#eee;width:60vw;margin:15vh auto;font-family:system-ui,sans-serif}h1{font-size:1.5em}div{opacity:0.8}a:link,a:visited{color:#348}</style><body><div><h1>Example Domain</h1><p>This domain is for use in documentation examples without needing permission. Avoid use in operations.<p><a href="https://iana.org/domains/example">Learn more</a></div></body></html>\n',
      {
        headers: {
          "accept-ranges": "bytes",
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-type": "text/html",
          "last-modified": "Thu, 09 Oct 2025 16:42:02 GMT",
          date: "Tue, 21 Oct 2025 19:51:24 GMT",
          etag: '"bc2473a18e003bdb249eba5ce893033f:1760028122.592274"',
          vary: "Accept-Encoding",
        },
        status: 200,
        statusText: "OK",
      },
    ],
  },
];

mock[`mockFetch() matches with Request and init > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        headers: {},
        method: "GET",
        redirect: "follow",
      },
    ],
    output: [
      "<HTML><HEAD>\n" +
        "<TITLE>Access Denied</TITLE>\n" +
        "</HEAD><BODY>\n" +
        "<H1>Access Denied</H1>\n" +
        " \n" +
        `You don't have permission to access "http&#58;&#47;&#47;example&#46;com&#47;" on this server.<P>\n` +
        "Reference&#32;&#35;18&#46;ce643717&#46;1761076284&#46;381db493\n" +
        "<P>https&#58;&#47;&#47;errors&#46;edgesuite&#46;net&#47;18&#46;ce643717&#46;1761076284&#46;381db493</P>\n" +
        "</BODY>\n" +
        "</HTML>\n",
      {
        headers: {
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-length": "361",
          "content-type": "text/html",
          "mime-version": "1.0",
          date: "Tue, 21 Oct 2025 19:51:24 GMT",
        },
        status: 403,
        statusText: "Forbidden",
      },
    ],
  },
];

mock[`mockFetch() matches with URL and Request > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        headers: {},
        method: "POST",
        redirect: "follow",
      },
    ],
    output: [
      "<HTML><HEAD>\n" +
        "<TITLE>Access Denied</TITLE>\n" +
        "</HEAD><BODY>\n" +
        "<H1>Access Denied</H1>\n" +
        " \n" +
        `You don't have permission to access "http&#58;&#47;&#47;example&#46;com&#47;" on this server.<P>\n` +
        "Reference&#32;&#35;18&#46;cb643717&#46;1761076285&#46;b3f2c0ef\n" +
        "<P>https&#58;&#47;&#47;errors&#46;edgesuite&#46;net&#47;18&#46;cb643717&#46;1761076285&#46;b3f2c0ef</P>\n" +
        "</BODY>\n" +
        "</HTML>\n",
      {
        headers: {
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-length": "361",
          "content-type": "text/html",
          "mime-version": "1.0",
          date: "Tue, 21 Oct 2025 19:51:25 GMT",
        },
        status: 403,
        statusText: "Forbidden",
      },
    ],
  },
];

mock[`mockFetch() matches method > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        headers: {},
        method: "POST",
        redirect: "follow",
      },
    ],
    output: [
      "<HTML><HEAD>\n" +
        "<TITLE>Access Denied</TITLE>\n" +
        "</HEAD><BODY>\n" +
        "<H1>Access Denied</H1>\n" +
        " \n" +
        `You don't have permission to access "http&#58;&#47;&#47;example&#46;com&#47;" on this server.<P>\n` +
        "Reference&#32;&#35;18&#46;cd643717&#46;1761076285&#46;19fe00ad\n" +
        "<P>https&#58;&#47;&#47;errors&#46;edgesuite&#46;net&#47;18&#46;cd643717&#46;1761076285&#46;19fe00ad</P>\n" +
        "</BODY>\n" +
        "</HTML>\n",
      {
        headers: {
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-length": "361",
          "content-type": "text/html",
          "mime-version": "1.0",
          date: "Tue, 21 Oct 2025 19:51:25 GMT",
        },
        status: 403,
        statusText: "Forbidden",
      },
    ],
  },
  {
    input: [
      "https://example.com/",
      {
        headers: {},
        method: "GET",
        redirect: "follow",
      },
    ],
    output: [
      '<!doctype html><html lang="en"><head><title>Example Domain</title><meta name="viewport" content="width=device-width, initial-scale=1"><style>body{background:#eee;width:60vw;margin:15vh auto;font-family:system-ui,sans-serif}h1{font-size:1.5em}div{opacity:0.8}a:link,a:visited{color:#348}</style><body><div><h1>Example Domain</h1><p>This domain is for use in documentation examples without needing permission. Avoid use in operations.<p><a href="https://iana.org/domains/example">Learn more</a></div></body></html>\n',
      {
        headers: {
          "accept-ranges": "bytes",
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-type": "text/html",
          "last-modified": "Thu, 09 Oct 2025 16:42:02 GMT",
          date: "Tue, 21 Oct 2025 19:51:25 GMT",
          etag: '"bc2473a18e003bdb249eba5ce893033f:1760028122.592274"',
          vary: "Accept-Encoding",
        },
        status: 200,
        statusText: "OK",
      },
    ],
  },
  {
    input: [
      "https://example.com/",
      {
        headers: {},
        method: "GET",
        redirect: "follow",
      },
    ],
    output: [
      '<!doctype html><html lang="en"><head><title>Example Domain</title><meta name="viewport" content="width=device-width, initial-scale=1"><style>body{background:#eee;width:60vw;margin:15vh auto;font-family:system-ui,sans-serif}h1{font-size:1.5em}div{opacity:0.8}a:link,a:visited{color:#348}</style><body><div><h1>Example Domain</h1><p>This domain is for use in documentation examples without needing permission. Avoid use in operations.<p><a href="https://iana.org/domains/example">Learn more</a></div></body></html>\n',
      {
        headers: {
          "accept-ranges": "bytes",
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-type": "text/html",
          "last-modified": "Thu, 09 Oct 2025 16:42:02 GMT",
          date: "Tue, 21 Oct 2025 19:51:25 GMT",
          etag: '"bc2473a18e003bdb249eba5ce893033f:1760028122.592274"',
          vary: "Accept-Encoding",
        },
        status: 200,
        statusText: "OK",
      },
    ],
  },
];

mock[`mockFetch() matches body > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        headers: {
          "content-type": "text/plain;charset=UTF-8",
        },
        method: "POST",
        redirect: "follow",
      },
    ],
    output: [
      "<HTML><HEAD>\n" +
        "<TITLE>Access Denied</TITLE>\n" +
        "</HEAD><BODY>\n" +
        "<H1>Access Denied</H1>\n" +
        " \n" +
        `You don't have permission to access "http&#58;&#47;&#47;example&#46;com&#47;" on this server.<P>\n` +
        "Reference&#32;&#35;18&#46;c4643717&#46;1761076286&#46;c24f9cc4\n" +
        "<P>https&#58;&#47;&#47;errors&#46;edgesuite&#46;net&#47;18&#46;c4643717&#46;1761076286&#46;c24f9cc4</P>\n" +
        "</BODY>\n" +
        "</HTML>\n",
      {
        headers: {
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-length": "361",
          "content-type": "text/html",
          "mime-version": "1.0",
          date: "Tue, 21 Oct 2025 19:51:26 GMT",
        },
        status: 403,
        statusText: "Forbidden",
      },
    ],
  },
  {
    input: [
      "https://example.com/",
      {
        body: "body",
        headers: {
          "content-type": "text/plain;charset=UTF-8",
        },
        method: "POST",
        redirect: "follow",
      },
    ],
    output: [
      "<HTML><HEAD>\n" +
        "<TITLE>Access Denied</TITLE>\n" +
        "</HEAD><BODY>\n" +
        "<H1>Access Denied</H1>\n" +
        " \n" +
        `You don't have permission to access "http&#58;&#47;&#47;example&#46;com&#47;" on this server.<P>\n` +
        "Reference&#32;&#35;18&#46;c4643717&#46;1761076286&#46;c24f9cc2\n" +
        "<P>https&#58;&#47;&#47;errors&#46;edgesuite&#46;net&#47;18&#46;c4643717&#46;1761076286&#46;c24f9cc2</P>\n" +
        "</BODY>\n" +
        "</HTML>\n",
      {
        headers: {
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-length": "361",
          "content-type": "text/html",
          "mime-version": "1.0",
          date: "Tue, 21 Oct 2025 19:51:26 GMT",
        },
        status: 403,
        statusText: "Forbidden",
      },
    ],
  },
  {
    input: [
      "https://example.com/",
      {
        headers: {},
        method: "POST",
        redirect: "follow",
      },
    ],
    output: [
      "<HTML><HEAD>\n" +
        "<TITLE>Access Denied</TITLE>\n" +
        "</HEAD><BODY>\n" +
        "<H1>Access Denied</H1>\n" +
        " \n" +
        `You don't have permission to access "http&#58;&#47;&#47;example&#46;com&#47;" on this server.<P>\n` +
        "Reference&#32;&#35;18&#46;c4643717&#46;1761076286&#46;c24f9cc3\n" +
        "<P>https&#58;&#47;&#47;errors&#46;edgesuite&#46;net&#47;18&#46;c4643717&#46;1761076286&#46;c24f9cc3</P>\n" +
        "</BODY>\n" +
        "</HTML>\n",
      {
        headers: {
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-length": "361",
          "content-type": "text/html",
          "mime-version": "1.0",
          date: "Tue, 21 Oct 2025 19:51:26 GMT",
        },
        status: 403,
        statusText: "Forbidden",
      },
    ],
  },
];

mock[`mockFetch() matches consumable request > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        body: "body",
        headers: {
          "content-type": "text/plain;charset=UTF-8",
        },
        method: "POST",
        redirect: "follow",
      },
    ],
    output: [
      "<HTML><HEAD>\n" +
        "<TITLE>Access Denied</TITLE>\n" +
        "</HEAD><BODY>\n" +
        "<H1>Access Denied</H1>\n" +
        " \n" +
        `You don't have permission to access "http&#58;&#47;&#47;example&#46;com&#47;" on this server.<P>\n` +
        "Reference&#32;&#35;18&#46;ce643717&#46;1761076286&#46;381e33d4\n" +
        "<P>https&#58;&#47;&#47;errors&#46;edgesuite&#46;net&#47;18&#46;ce643717&#46;1761076286&#46;381e33d4</P>\n" +
        "</BODY>\n" +
        "</HTML>\n",
      {
        headers: {
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-length": "361",
          "content-type": "text/html",
          "mime-version": "1.0",
          date: "Tue, 21 Oct 2025 19:51:26 GMT",
        },
        status: 403,
        statusText: "Forbidden",
      },
    ],
  },
];

mock[`mockFetch() matches arraybuffer body > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        body: "body",
        headers: {},
        method: "POST",
        redirect: "follow",
      },
    ],
    output: [
      "<HTML><HEAD>\n" +
        "<TITLE>Access Denied</TITLE>\n" +
        "</HEAD><BODY>\n" +
        "<H1>Access Denied</H1>\n" +
        " \n" +
        `You don't have permission to access "http&#58;&#47;&#47;example&#46;com&#47;" on this server.<P>\n` +
        "Reference&#32;&#35;18&#46;c7643717&#46;1761076286&#46;882d24e7\n" +
        "<P>https&#58;&#47;&#47;errors&#46;edgesuite&#46;net&#47;18&#46;c7643717&#46;1761076286&#46;882d24e7</P>\n" +
        "</BODY>\n" +
        "</HTML>\n",
      {
        headers: {
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-length": "361",
          "content-type": "text/html",
          "mime-version": "1.0",
          date: "Tue, 21 Oct 2025 19:51:27 GMT",
        },
        status: 403,
        statusText: "Forbidden",
      },
    ],
  },
];

mock[`mockFetch() matches blob body > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        body: "body",
        headers: {
          "content-type": "text/plain",
        },
        method: "POST",
        redirect: "follow",
      },
    ],
    output: [
      "<HTML><HEAD>\n" +
        "<TITLE>Access Denied</TITLE>\n" +
        "</HEAD><BODY>\n" +
        "<H1>Access Denied</H1>\n" +
        " \n" +
        `You don't have permission to access "http&#58;&#47;&#47;example&#46;com&#47;" on this server.<P>\n` +
        "Reference&#32;&#35;18&#46;cc643717&#46;1761076287&#46;a081ef80\n" +
        "<P>https&#58;&#47;&#47;errors&#46;edgesuite&#46;net&#47;18&#46;cc643717&#46;1761076287&#46;a081ef80</P>\n" +
        "</BODY>\n" +
        "</HTML>\n",
      {
        headers: {
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-length": "361",
          "content-type": "text/html",
          "mime-version": "1.0",
          date: "Tue, 21 Oct 2025 19:51:27 GMT",
        },
        status: 403,
        statusText: "Forbidden",
      },
    ],
  },
];

mock[`mockFetch() matches form data body > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        body: "--BOUNDARY\r\n" +
          'Content-Disposition: form-data; name="key"\r\n' +
          "\r\n" +
          "value\r\n" +
          "--BOUNDARY--",
        headers: {
          "content-type": "multipart/form-data; boundary=BOUNDARY",
        },
        method: "POST",
        redirect: "follow",
      },
    ],
    output: [
      "<HTML><HEAD>\n" +
        "<TITLE>Access Denied</TITLE>\n" +
        "</HEAD><BODY>\n" +
        "<H1>Access Denied</H1>\n" +
        " \n" +
        `You don't have permission to access "http&#58;&#47;&#47;example&#46;com&#47;" on this server.<P>\n` +
        "Reference&#32;&#35;18&#46;c7643717&#46;1761076287&#46;882d5a21\n" +
        "<P>https&#58;&#47;&#47;errors&#46;edgesuite&#46;net&#47;18&#46;c7643717&#46;1761076287&#46;882d5a21</P>\n" +
        "</BODY>\n" +
        "</HTML>\n",
      {
        headers: {
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-length": "361",
          "content-type": "text/html",
          "mime-version": "1.0",
          date: "Tue, 21 Oct 2025 19:51:28 GMT",
        },
        status: 403,
        statusText: "Forbidden",
      },
    ],
  },
];

mock[`mockFetch() matches search params body > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        body: "key=value",
        headers: {
          "content-type": "application/x-www-form-urlencoded;charset=UTF-8",
        },
        method: "POST",
        redirect: "follow",
      },
    ],
    output: [
      "<HTML><HEAD>\n" +
        "<TITLE>Access Denied</TITLE>\n" +
        "</HEAD><BODY>\n" +
        "<H1>Access Denied</H1>\n" +
        " \n" +
        `You don't have permission to access "http&#58;&#47;&#47;example&#46;com&#47;" on this server.<P>\n` +
        "Reference&#32;&#35;18&#46;d1643717&#46;1761076288&#46;bd96f471\n" +
        "<P>https&#58;&#47;&#47;errors&#46;edgesuite&#46;net&#47;18&#46;d1643717&#46;1761076288&#46;bd96f471</P>\n" +
        "</BODY>\n" +
        "</HTML>\n",
      {
        headers: {
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-length": "361",
          "content-type": "text/html",
          "mime-version": "1.0",
          date: "Tue, 21 Oct 2025 19:51:28 GMT",
        },
        status: 403,
        statusText: "Forbidden",
      },
    ],
  },
];

mock[`mockFetch() matches iterable body > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        body: "body",
        headers: {},
        method: "POST",
        redirect: "follow",
      },
    ],
    output: [
      "<HTML><HEAD>\n" +
        "<TITLE>Access Denied</TITLE>\n" +
        "</HEAD><BODY>\n" +
        "<H1>Access Denied</H1>\n" +
        " \n" +
        `You don't have permission to access "http&#58;&#47;&#47;example&#46;com&#47;" on this server.<P>\n` +
        "Reference&#32;&#35;18&#46;ce643717&#46;1761076288&#46;381eca19\n" +
        "<P>https&#58;&#47;&#47;errors&#46;edgesuite&#46;net&#47;18&#46;ce643717&#46;1761076288&#46;381eca19</P>\n" +
        "</BODY>\n" +
        "</HTML>\n",
      {
        headers: {
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-length": "361",
          "content-type": "text/html",
          "mime-version": "1.0",
          date: "Tue, 21 Oct 2025 19:51:29 GMT",
        },
        status: 403,
        statusText: "Forbidden",
      },
    ],
  },
];

mock[`mockFetch() matches async iterable body > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        body: "body",
        headers: {},
        method: "POST",
        redirect: "follow",
      },
    ],
    output: [
      "<HTML><HEAD>\n" +
        "<TITLE>Access Denied</TITLE>\n" +
        "</HEAD><BODY>\n" +
        "<H1>Access Denied</H1>\n" +
        " \n" +
        `You don't have permission to access "http&#58;&#47;&#47;example&#46;com&#47;" on this server.<P>\n` +
        "Reference&#32;&#35;18&#46;d1643717&#46;1761076289&#46;bd9734fa\n" +
        "<P>https&#58;&#47;&#47;errors&#46;edgesuite&#46;net&#47;18&#46;d1643717&#46;1761076289&#46;bd9734fa</P>\n" +
        "</BODY>\n" +
        "</HTML>\n",
      {
        headers: {
          "alt-svc": 'h3=":443"; ma=93600',
          "cache-control": "max-age=86000",
          "content-length": "361",
          "content-type": "text/html",
          "mime-version": "1.0",
          date: "Tue, 21 Oct 2025 19:51:29 GMT",
        },
        status: 403,
        statusText: "Forbidden",
      },
    ],
  },
];

mock[`mockFetch({ ignore }) can ignore headers > fetch 1`] =
[
  {
    input: [
      "https://example.com/",
      {
        method: "GET",
        redirect: "follow",
      },
    ],
    output: [
      '<!doctype html><html lang="en"><head><title>Example Domain</title><meta name="viewport" content="width=device-width, initial-scale=1"><style>body{background:#eee;width:60vw;margin:15vh auto;font-family:system-ui,sans-serif}h1{font-size:1.5em}div{opacity:0.8}a:link,a:visited{color:#348}</style><body><div><h1>Example Domain</h1><p>This domain is for use in documentation examples without needing permission. Avoid use in operations.<p><a href="https://iana.org/domains/example">Learn more</a></div></body></html>\n',
      {
        headers: {
          "Content-Type": "text/html",
        },
        status: 200,
        statusText: "OK",
      },
    ],
  },
];
